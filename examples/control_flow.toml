doberman.version = 0
doberman.name = "examples_control_flow"

[count_example.http]
    url = "https://example.com/test"
    [count_example.run]
    count = 3

[parallel_example.http]
    url = "https://example.com/test"
    headers.X-Item.cel = "string(count.index)"
    pause.after.open.duration = "1s"
    [parallel_example.run]
    count = 5
    parallel = true

[while_example.http]
    url = "https://example.com/test"
    headers.X-Item.cel = "string(while.index)"
    [while_example.run]
    while.cel = "while.index < uint(5)"

[for_each_example.http]
    url = "https://example.com/test"
    headers.X-Index.cel = "string(for.key)"
    headers.X-Item.cel = "string(for.value)"
    [for_each_example.run]
    for = ["foo", 100, "bar"]

[table_for_each_example.http]
    url = "https://example.com/test"
    headers.X-Key.cel = "string(for.key)"
    headers.X-Value.cel = "string(for.value)"
    pause.after.open.duration = "1s"
    [table_for_each_example.run]
    for = { k1 = 1, k2 = "value" }
    parallel = true

[if_example.http]
    url = "https://example.com/test"
    [if_example.run]
    if.cel = "steps.count_example[0].http.response.status_code == 400"

[http2_multiplexing.h2]
    url = "https://example.com/test"
    [http2_multiplexing.run]
    count = 5
    share = "http2frames"
    parallel = true

[http1_pipelining.h2]
    url = "https://example.com/test"
    [http1_pipelining.run]
    count = 5
    share = "tls"
    parallel = "pipelined"

[after_example.http]
    url = "https://example.com/test"
    [after_example.run]
    after = "count_example"
